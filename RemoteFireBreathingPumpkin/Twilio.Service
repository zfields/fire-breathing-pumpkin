// Require libraries
const axios = require('axios');

exports.handler = async (context, event, callback) => {
  // Create a new messaging response object
  const twiml = new Twilio.twiml.MessagingResponse();

  // Access the incoming text content from `event.Body`
  // (this is the inbound SMS message)
  const incomingMessage = event.Body.toLowerCase();

  // If the incoming SMS includes the fire (ðŸ”¥) and pumpkin (ðŸŽƒ)
  // emojis, use the Notehub API to send a Note to Notehub.
  // | ðŸŽƒ - U+1F383 | ðŸ”¥ - U+1F525 |
  if (incomingMessage.includes(`\u{1F383}`) && incomingMessage.includes(`\u{1F525}`)) {
    try {
      const response = await axios.post(
        `https://api.notefile.net/v1/projects/${context.NOTEHUB_PRODUCT_UID}/devices/${context.NOTECARD_DEVICE_ID}/notes/flame.qi`,
        { body: {} },
        {
          headers: {
            'Authorization': `Bearer ${context.NOTEHUB_API_KEY}`,
            'Content-Type': 'application/json'
          }
        }
      );

      // Acknowledge the SMS request
      console.log(response.data);
      twiml.message("Happy Halloween!");

      return callback(null, twiml);
    } catch (error) {
      // In the event of an error, return a 500 error and the error message
      console.error(error);
      return callback(error);
    }
  } else if (incomingMessage.includes('test')) {
    // great for testing a simple response!
    twiml.message('Hello there!');
  } else {
    // undefined incoming message
    twiml.message('Not sure what you meant!?');
  }

  return callback(null, twiml);
};
